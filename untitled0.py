# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KPeF2fpf7lXRazO4qJ0crEHmY53B-hHN
"""

import streamlit as st
import pandas as pd
import numpy as np
import joblib
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris

# Load model
model = joblib.load("model.pkl")

# Load dataset
iris = load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)
df['target'] = iris.target
df['species'] = df['target'].apply(lambda x: iris.target_names[x])

# Set page config
st.set_page_config(page_title="Iris Classifier", layout="centered")

# Sidebar menu
page = st.sidebar.selectbox("Select Page", ["🏠 Home", "📊 Data Description", "🔮 Prediction"])

# Page 1: Home
if page == "🏠 Home":
    st.title("🌸 Iris Flower Classification")
    st.markdown("""
    Welcome to the **Iris Classifier App** built with **Naive Bayes** and **Streamlit**!

    🌱 This app helps classify iris flowers into 3 species:
    - Setosa
    - Versicolor
    - Virginica

    Navigate through the sidebar to:
    - View dataset and statistics
    - Predict species from input features
    """)

# Page 2: Data Description
elif page == "📊 Data Description":
    st.title("📊 Iris Dataset Overview")

    st.subheader("Sample Data")
    st.dataframe(df.head())

    st.subheader("Class Distribution")
    st.bar_chart(df['species'].value_counts())

    st.subheader("Feature Distributions")
    selected_feature = st.selectbox("Select feature", df.columns[:-2])
    fig, ax = plt.subplots()
    sns.histplot(data=df, x=selected_feature, hue='species', kde=True, ax=ax)
    st.pyplot(fig)

# Page 3: Prediction
elif page == "🔮 Prediction":
    st.title("🔮 Predict Iris Species")

    st.markdown("Input the flower measurements below:")

    sepal_length = st.number_input("Sepal length (cm)", min_value=0.0, max_value=10.0, value=5.1)
    sepal_width = st.number_input("Sepal width (cm)", min_value=0.0, max_value=10.0, value=3.5)
    petal_length = st.number_input("Petal length (cm)", min_value=0.0, max_value=10.0, value=1.4)
    petal_width = st.number_input("Petal width (cm)", min_value=0.0, max_value=10.0, value=0.2)

    if st.button("Predict"):
        input_data = np.array([[sepal_length, sepal_width, petal_length, petal_width]])
        prediction = model.predict(input_data)[0]
        predicted_species = iris.target_names[prediction]
        st.success(f"The predicted species is: **{predicted_species}** 🌸")